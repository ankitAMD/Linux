# 🟢 Kubernetes: Pods, ReplicaSet, Deployment, StatefulSet, DaemonSet

---

## 1. Pods – Basic Unit

* A **Pod** is the smallest unit in Kubernetes.
* **Creating a pod is not special**.
* The **real power** is making Pods **scalable** and **manageable**.

👉 Example:
If Amazon has **Big Billion Days**, then 3 Pods will not handle the huge traffic.
We need **many replicas** to serve all customers.
If only **1 Pod** handles all traffic → it will crash (**“mar jayega” 😅**).

---

## 2. ReplicaSet – Scaling Pods

* **ReplicaSet** ensures a fixed number of Pod replicas are always running.
* Example: If you define a ReplicaSet with `replicas: 4` and image `nginx`, then **4 Pods** will be created.
* Even if one Pod dies, ReplicaSet will create a new one automatically.

👉 Commands:

```bash
kubectl apply -f replicasets.yml
kubectl get replicasets -n nginx
kubectl delete -f replicasets.yml
```

---

## 3. Deployment – Advanced ReplicaSet

* Deployment is **ReplicaSet + Extra Features**.
* Supports:

  * **Rolling Updates** (update Pods one by one, not all at once).
  * **Rollback** (go back to previous version if update fails).

👉 Example of Rolling Update:

```bash
kubectl set image deployment/nginx-deployment -n nginx nginx=nginx:1.27.1
```

This changes the image version **step by step** (no full downtime).

👉 Useful Commands:

```bash
kubectl apply -f deployment.yml
kubectl get deployment -n nginx
kubectl scale deployment/nginx-deployment -n nginx --replicas=10
```

---

## 4. StatefulSet – Pods with Identity

* In normal ReplicaSet/Deployment, Pods are **identical and replaceable**.
* In **StatefulSet**, Pods get a **fixed identity (number)** like `pod-0`, `pod-1`, `pod-2`.
* Even if deleted, the Pod number remains in sequence.
* Used when Pods need **stable storage or identity** (e.g., databases).

👉 We learn more StatefulSet when we study **storage**.

---

## 5. DaemonSet – Pod on Every Node

* DaemonSet ensures **at least one Pod runs on each Node** in the cluster.
* Example: If you have 5 nodes, DaemonSet will run **1 Pod per node**.
* Common use: logging, monitoring, networking agents.

👉 Commands:

```bash
kubectl apply -f daemonsets.yml
kubectl get pods -n nginx -o wide
kubectl delete -f daemonsets.yml
```

---

## 6. Labels & Selectors – Connecting Deployment & Pods

* A Deployment needs to know **which Pods to manage**.
* This is done with **labels** and **selectors**.

👉 Example:

* Pod has `label: app=nginx`
* Deployment has `selector: matchLabels: app=nginx`
  ✅ This way Deployment knows **these Pods belong to me**.

---

# 🟢 Summary

* **Pod** → Smallest unit, but not scalable alone.
* **ReplicaSet** → Keeps multiple Pods running.
* **Deployment** → Adds features like rolling updates & rollback.
* **StatefulSet** → Pods with fixed identity, used in storage/database.
* **DaemonSet** → Ensures one Pod per Node.

---

Do you want me to also make a **small diagram/flowchart** (Pods ← ReplicaSet ← Deployment ← StatefulSet/DaemonSet) to visualize it better?
